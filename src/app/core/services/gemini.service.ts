import { Injectable } from '@angular/core';
import { GoogleGenerativeAI } from '@google/generative-ai';
import { environment } from '../../../environments/environment';

@Injectable({
  providedIn: 'root'
})
export class GeminiService {
  private genAI: GoogleGenerativeAI;
  private model: any;
  private currentContext: string = '';

  constructor() {
    this.genAI = new GoogleGenerativeAI(environment.geminiApiKey);
    this.model = this.genAI.getGenerativeModel({ model: 'gemini-2.0-flash' });
  }

  async startStory(genre: string, language: string): Promise<string> {
    const prompt = `You are an interactive book in which the reader can choose how the plot will unfold.

The type of the book is ${genre}, and its language is ${language}. Just start the story without telling that you are starting. Add title at the beginning with the tag <Title>Title</Title>. Each time, the user will have 3 options to choose from (generated by you (A, B, C) labeled accordingly:

<Option A>You click the button and wait to see what happens</Option A>

In addition, add a verbal description of the image, which will describe the scene a bit. Label it like this:

<Image description>Description</Image description/>`;

    try {
      const result = await this.model.generateContent(prompt);
      const response = await result.response;
      this.currentContext = prompt + '\n\nStory so far:\n' + response.text();
      return response.text();
    } catch (error) {
      console.error('Error generating story:', error);
      throw error;
    }
  }

  async continueStory(selectedOption: string): Promise<string> {
    const prompt = `${this.currentContext}\n\nUser selected: ${selectedOption}\n\nContinue the story based on this choice. Remember to provide new options (A, B, C) and an image description for the new scene. Use the same format as before.`;

    try {
      const result = await this.model.generateContent(prompt);
      const response = await result.response;
      this.currentContext = prompt + '\n' + response.text();
      return response.text();
    } catch (error) {
      console.error('Error continuing story:', error);
      throw error;
    }
  }
} 